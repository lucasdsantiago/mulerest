<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:jdbc="http://www.mulesoft.org/schema/mule/jdbc" xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:jersey="http://www.mulesoft.org/schema/mule/jersey" xmlns:core="http://www.mulesoft.org/schema/mule/core" version="EE-3.5.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/jersey http://www.mulesoft.org/schema/mule/jersey/current/mule-jersey.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd">
    <jdbc-ee:postgresql-data-source name="PostgreSQL_DB_PRODABEL" user="postgres" password="postgres" url="jdbc:postgresql://localhost:5433/rh-prodabel" transactionIsolation="UNSPECIFIED" doc:name="PostgreSQL Data Source"></jdbc-ee:postgresql-data-source>
    <jdbc-ee:connector name="GEE-DB-PRODABEL" dataSource-ref="PostgreSQL_DB_PRODABEL" validateConnections="true" queryTimeout="-1" pollingFrequency="0" doc:name="Database"> 
        <jdbc-ee:query key="LOGIN" value="SELECT NOME, EMAIL FROM SERVIDOR_PRODABEL WHERE CPF = #[flowVars['cpf']] AND SENHA = #[flowVars['senha']]"></jdbc-ee:query>  
    </jdbc-ee:connector>
    <jms:activemq-connector name="Active_MQ_Confirmacao_Declaracao" brokerURL="tcp://localhost:61616" validateConnections="true" doc:name="Active MQ"></jms:activemq-connector>
    <smtp:gmail-connector name="Gmail" validateConnections="true" doc:name="Gmail" contentType="text/html"></smtp:gmail-connector>
    <flow name="FluxoEnviarEmailConfirmacao" doc:name="FluxoEnviarEmailConfirmacao"> 
        <jms:inbound-endpoint queue="FilaEmail" connector-ref="Active_MQ_Confirmacao_Declaracao" doc:name="FilaConfirmacaoDeclaracao"></jms:inbound-endpoint>  
        <component class="pucminas.teste.mulerest.resource.components.PreparaMensagemEmail" doc:name="PreparaMensagemEmail"></component>  
        <smtp:outbound-endpoint host="smtp.gmail.com" port="587" user="pucminastcceai%40gmail.com" password="pucminas" from="Lucas" to="#[flowVars['destinatario']]" responseTimeout="10000" connector-ref="Gmail" doc:name="ServidorEmail" subject="TCC - CONFIRMACAO DECLARACAO DE BENS"></smtp:outbound-endpoint>  
    </flow>
    <flow name="FluxoAutenticaServ" doc:name="FluxoAutenticaServ"> 
        <json:json-to-object-transformer doc:name="JSON to Object"></json:json-to-object-transformer>  
        <component class="pucminas.teste.mulerest.resource.components.DefineOrgaoVariable" doc:name="Define Orgao RH"></component>  
        <choice doc:name="Choice"> 
            <when expression="#[flowVars['orgao'] == 'Prodabel']"> 
                <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="LOGIN" queryTimeout="-1" connector-ref="GEE-DB-PRODABEL" doc:name="PRODABEL"></jdbc-ee:outbound-endpoint>  
            </when>  
            <when expression="#[flowVars['orgao'] == 'BHTrans']"> 
                <set-payload value="BHTrans RH" doc:name="BHTrans RH"></set-payload>  
            </when>  
            <otherwise> 
                <set-payload value="PBH Direto" doc:name="PBH RH"></set-payload>  
            </otherwise>  
        </choice>  
        <json:object-to-json-transformer doc:name="Object to JSON"></json:object-to-json-transformer>  
        <component class="pucminas.teste.mulerest.resource.transformers.VerificaLoginRetorno" doc:name="Retorno Login"></component>  
    </flow>
    <flow name="EnviaDeclaracaoParaDeclaraServ" doc:name="EnviaDeclaracaoParaDeclaraServ"> 
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8081" doc:name="HTTP"></http:inbound-endpoint>  
        <http:outbound-endpoint exchange-pattern="request-response" method="POST" address="http://localhost:8080/declarabens-serv-web/rest/declara/add" doc:name="DeclaraServ"></http:outbound-endpoint>  
    </flow>
    <flow name="OrquestracaoMule" doc:name="OrquestracaoMule"> 
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8081" path="mulerest" doc:name="HTTP"></http:inbound-endpoint>  
        <flow-ref name="FluxoAutenticaServ" doc:name="FluxoAutenticaServ"></flow-ref>  
        <choice doc:name="Choice"> 
            <when expression="#[flowVars['LoginSucesso'] == 'S']"> 
                <json:json-to-object-transformer doc:name="JSON to Object"></json:json-to-object-transformer>  
                <custom-transformer class="pucminas.teste.mulerest.resource.transformers.RecomporMensagemEnvioDeclaracao" doc:name="Recompoe Declaracao"></custom-transformer>  
                <json:object-to-json-transformer doc:name="Object to JSON"></json:object-to-json-transformer>  
                <flow-ref name="EnviaDeclaracaoParaDeclaraServ" doc:name="Envia Declara&#231;&#227;o para DeclaraServ"></flow-ref>  
            </when>  
            <otherwise> 
                <set-payload value="[{&quot;erro&quot;:&quot;Login e/senha inv&#225;lido!&quot;}]" doc:name="Erro no Login"></set-payload>  
            </otherwise>  
        </choice>  
    </flow>

</mule>
